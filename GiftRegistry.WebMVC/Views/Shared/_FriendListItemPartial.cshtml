@model GiftRegistry.Models.FriendListItem

<div class="col column-gallery">
    <div class="card h-100">

        @if (Model.Person.ProfilePicture != null)
        {
            var base64 = Convert.ToBase64String(Model.Person.ProfilePicture);
            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
            <div class="card-img-section mb-2">
                <div class="img-wrapper">
                    <img src="@imgSrc" class="card-img-top mx-auto" alt="Friend Profile Picture">
                </div>
            </div>
        }

        <div class="card-body pt-0">
            <h5 class="card-title">@Model.Person.FullName</h5>

            @if (Model.IsPending)
            {
                if (!String.IsNullOrWhiteSpace(Model.Relationship))
                {
                    <p class="card-text align-middle"><img src="~/Images/UserIcon.svg" class="icon" /> @Model.Relationship (Friend Request Pending)</p>
                }
            }
            else
            {
                if (!String.IsNullOrWhiteSpace(Model.Relationship))
                {
                    <p class="card-text align-middle"><img src="~/Images/UserIcon.svg" class="icon" /> @Model.Relationship</p>
                }
                if (Model.Person.Birthdate != null)
                {
                    <p class="card-text align-middle"><img src="~/Images/Birthday.svg" class="icon"> @Model.Person.Birthdate.Value.ToString("MMM. dd")</p>
                }
            }
        </div>

        <div class="card-footer">
            <div class="d-flex justify-content-center">

                @if (Model.IsPending)
                {
                    @Html.ActionLink("View", "Details", "Friend", new { id = Model.FriendID }, new { @class = "btn btn-gray-light btn-action" })

                    <button type="button" class="btn btn-gray-light btn-action" data-toggle="ajax-modal" data-target="#editFriend"
                            data-url="@Url.Action("Edit", "Friend", new { id = Model.FriendID })">
                        Edit
                    </button>

                    <button type="button" class="btn btn-red btn-action" data-toggle="ajax-modal" data-target="#deleteFriend"
                            data-url="@Url.Action("Delete", "Friend", new { id = Model.FriendID })">
                        Cancel Request
                    </button>
                }
                else
                {
                    @Html.ActionLink("View", "Details", "Friend", new { id = Model.FriendID }, new { @class = "btn btn-gray-light btn-action" })

                    <button type="button" class="btn btn-gray-light btn-action" data-toggle="ajax-modal" data-target="#editFriend"
                            data-url="@Url.Action("Edit", "Friend", new { id = Model.FriendID })">
                        Edit
                    </button>

                    <button type="button" class="btn btn-red btn-action" data-toggle="ajax-modal" data-target="#deleteFriend"
                            data-url="@Url.Action("Delete", "Friend", new { id = Model.FriendID })">
                        Unfriend
                    </button>
                }

            </div>
        </div>
    </div>
</div>

<style>

    .img-wrapper {
        overflow: hidden;
        width: 250px;
        height: 250px;
        border-bottom: 1px solid rgba(143, 143, 143, .5);
    }

    .card-img-top {
        width: 250px;
        height: auto;
        aspect-ratio: 1.0;
        object-fit: cover;
        transform: scale(1.08);
        transform-origin: 50% 50%;
        overflow: hidden;
        background-color: rgba(224, 184, 64, .25);
    }

    .icon {
        height: 1.2em;
    }

    .card-title {
    }

    .card-text {
        margin-bottom: 0px;
    }

    .card {
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 2px 6px 6px rgba(143, 143, 143, 0.75);
        max-width: 250px;
    }
</style>