@model IEnumerable<GiftRegistry.Models.NotificationListItem>

@{
    ViewBag.Title = "Notifications";
}

<div class="row mt-4">

    <div class="col-md-6 align-self-end py-4">
        <div class="mt-4 gray-box">
            <h4>Here's where we store your notifications!</h4>
            <p class="mt-3">You may get notifications for friend requests, events, and any changes involving your transactions.</p>

        </div>
    </div>

    <div class="col-md-6">
        <div class="text-center">
            <img id="feature-image" src="~/Images/Notification_Woman1.svg" alt="Notification image" />
        </div>
    </div>

</div>

<h2 class="mt-4">Notifications</h2>

<hr />

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Message)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr class="@GetClassForNotification(item.NotificationType)">

            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.Message)
            </td>
            @if (item.NotificationType == GiftRegistry.Data.NotificationType.ReadOnlyMessage)
            {
                <td class="align-middle">
                    @Html.ActionLink("Delete", "Delete", new { id = item.NotificationID }, new { @class = "btn btn-red float-end btn-list-item" })
                    @Html.ActionLink("View", "Details", new { id = item.NotificationID }, new { @class = "btn btn-gray-light float-end btn-list-item" })
                </td>
            }
            else if (item.NotificationType == GiftRegistry.Data.NotificationType.FriendRequest)
            {
                <td class="align-middle">
                    @Html.ActionLink("Ignore", "DenyFriendRequest", new { id = item.NotificationID }, new { @class = "btn btn-red float-end btn-list-item" })
                    @Html.ActionLink("View", "Details", new { id = item.NotificationID }, new { @class = "btn btn-gray-light float-end btn-list-item" })
                    @Html.ActionLink("Accept", "AcceptFriendRequest", new { id = item.NotificationID }, new { @class = "btn btn-gold float-end btn-list-item" })
                </td>
            }
            else
            {
                <td class="align-middle">
                    @Html.ActionLink("Delete", "Delete", new { id = item.NotificationID }, new { @class = "btn btn-red float-end btn-list-item" })
                    @Html.ActionLink("View", "Details", new { id = item.NotificationID }, new { @class = "btn btn-gray-light float-end btn-list-item" })
                </td>
            }
        </tr>
    }

</table>

@functions{
    public string GetClassForNotification(GiftRegistry.Data.NotificationType nType)
    {
        switch (nType)
        {
            case GiftRegistry.Data.NotificationType.ReadOnlyNegative:
                return "table-danger";
            case GiftRegistry.Data.NotificationType.ReadOnlyPositive:
                return "table-success";
            default:
                return "";
        }
    }
}

<style>

    body {
        color: #2E2E2E;
    }

    h4 {
        margin-top: 0px;
        margin-bottom: 0px;
        font-size: 32px;
    }

    #feature-image {
        width: 25vw;
        height: auto;
        padding: 50px;
    }

    .Massive-Text {
        font-size: 72px;
        margin-top: 0px;
        margin-bottom: 0px;
        color: #2E2E2E
    }

    div.gray-box {
        background-color: #F1F2F3;
        padding: 20px;
        border-radius: 12px;
    }

    .gold-text {
        color: #E0B840;
    }
</style>