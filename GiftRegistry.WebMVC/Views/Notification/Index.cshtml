@model IEnumerable<GiftRegistry.Models.NotificationListItem>

@{
    ViewBag.Title = "Notifications";
}

<div id="PlaceHolderHere"></div>

<div class="row mt-4">

    <div class="col-md-6 align-self-end py-4">
        <div class="mt-4 gray-box">
            <h4>Here's where we store your notifications!</h4>
            <p class="mt-3">You may get notifications for friend requests, events, and any changes involving your transactions.</p>

        </div>
    </div>

    <div class="col-md-6">
        <div class="text-center">
            <img id="feature-image" src="~/Images/Notification_Woman1.svg" alt="Notification image" />
        </div>
    </div>

</div>

<h2 class="mt-4">Notifications</h2>

<hr />

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Message)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr class="@GetClassForNotification(item.NotificationType)">

            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.Message)
            </td>
            @if (item.NotificationType == GiftRegistry.Data.NotificationType.ReadOnlyMessage)
            {
                <td class="align-middle">
                    <button type="button" class="btn btn-red float-end btn-list-item" data-toggle="ajax-modal" data-target="#deleteNotification"
                            data-url="@Url.Action("Delete", "Notification", new { id = item.NotificationID })">
                        Delete
                    </button>

                    <button type="button" class="btn btn-gray-light float-end btn-list-item" data-toggle="ajax-modal" data-target="#detailsNotification"
                            data-url="@Url.Action("Details", "Notification", new { id = item.NotificationID })">
                        Details
                    </button>
                </td>
            }
            else if (item.NotificationType == GiftRegistry.Data.NotificationType.FriendRequest)
            {
                <td class="align-middle">

                    <button type="button" class="btn btn-red float-end btn-list-item"
                            id="denyFriendRequestButton"
                            data-url="@Url.Action("DenyFriendRequest", "Notification", new { id = item.NotificationID })">
                        Ignore
                    </button>

                    <button type="button" class="btn btn-gray-light float-end btn-list-item" data-toggle="ajax-modal" data-target="#detailsNotification"
                            data-url="@Url.Action("Details", "Notification", new { id = item.NotificationID })">
                        View
                    </button>

                    @*@Html.ActionLink("Accept", "AcceptFriendRequest", new { id = item.NotificationID }, new { @id = "acceptFriendRequestButton", @class = "btn btn-gold float-end btn-list-item" })*@
                    <button type="button" class="btn btn-gold float-end btn-list-item"
                            id="acceptFriendRequestButton"
                            data-url="@Url.Action("AcceptFriendRequest", "Notification", new { id = item.NotificationID })">
                        Accept
                    </button>
                </td>
            }
            else
            {
                <td class="align-middle">
                    <button type="button" class="btn btn-red float-end btn-list-item" data-toggle="ajax-modal" data-target="#deleteNotification"
                            data-url="@Url.Action("Delete", "Notification", new { id = item.NotificationID })">
                        Delete
                    </button>

                    <button type="button" class="btn btn-gray-light float-end btn-list-item" data-toggle="ajax-modal" data-target="#detailsNotification"
                            data-url="@Url.Action("Details", "Notification", new { id = item.NotificationID })">
                        Details
                    </button>
                </td>
            }
        </tr>
    }

</table>

@functions{
    public string GetClassForNotification(GiftRegistry.Data.NotificationType nType)
    {
        switch (nType)
        {
            case GiftRegistry.Data.NotificationType.ReadOnlyNegative:
                return "table-danger";
            case GiftRegistry.Data.NotificationType.ReadOnlyPositive:
                return "table-success";
            default:
                return "";
        }
    }
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>

        // Button pressed to open a modal (any modal)
        $(function () {
            var PlaceHolderElement = $('#PlaceHolderHere');
            $('button[data-toggle="ajax-modal"]').click(function (event) {
                var url = $(this).data('url');
                $.get(url).done(function (data) {
                    PlaceHolderElement.html(data);
                    PlaceHolderElement.find('.modal').modal('show');
                });
            });

            // Delete button pressed on delete notification modal
            $('#PlaceHolderHere').on('click', '[id="btnDeleteNotificationSubmit"]', function (event) {
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();
                $.post(actionUrl, sendData).done(function (data) {
                    if (Boolean(data.successful)) {
                        PlaceHolderElement.find('.modal').modal('hide');
                        setTimeout(function () {// wait for 1 secs
                            location.reload(); // then reload the page.
                        }, 500);
                    } else {
                        // Show errors
                        //    alert("Error");
                    }
                })
                    .fail(function () {
                        alert("There was an error processing your request. Please try again.");
                    });
            });

            // Delete button pressed on delete notification modal
            $('#PlaceHolderHere').on('click', '[id="btnDeleteNotificationSubmit"]', function (event) {
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();
                $.post(actionUrl, sendData).done(function (data) {
                    if (Boolean(data.successful)) {
                        PlaceHolderElement.find('.modal').modal('hide');
                        setTimeout(function () {// wait for 1 secs
                            location.reload(); // then reload the page.
                        }, 500);
                    } else {
                        // Show errors
                        //    alert("Error");
                    }
                })
                    .fail(function () {
                        alert("There was an error processing your request. Please try again.");
                    });
            });

            // Ignore friend request button pressed on notification list item
            $(function () {
                $('#denyFriendRequestButton').on('click', function () {

                    var actionUrl = $(this).data('url');
                    $.post(actionUrl).done(function (data) {
                        if (Boolean(data.successful)) {
                            setTimeout(function () {// wait for 1 secs
                                location.reload(); // then reload the page.
                            }, 500);
                        } else {
                            // Show errors
                            //    alert("Error");
                        }
                    })
                        .fail(function () {
                            alert("There was an error processing your request. Please try again.");
                        });
                });
            });

            // Accept friend request button pressed on notification list item
            $(function () {
                $('#acceptFriendRequestButton').on('click', function () {

                    var actionUrl = $(this).data('url');
                    $.post(actionUrl).done(function (data) {
                        if (Boolean(data.successful)) {

                            var friendID = data.friendID;

                            $.get('@Url.Action("Edit", "Friend")', { id: friendID }).done(function (newData) {
                                PlaceHolderElement.html(newData);
                                PlaceHolderElement.find('.modal').modal('show');
                            });

                            @*$.get('@Url.Action("Edit", "Friend")', { id: friendID }, function (newData) {
                                PlaceHolderElement.html(newData);
                                PlaceHolderElement.find('.modal').modal('show');
                            });*@

                        } else {
                            // Show errors
                            //    alert("Error");
                        }
                    })
                        .fail(function () {
                            alert("There was an error processing your request. Please try again.");
                        });
                });
            });

            // Save button pressed on edit friend info modal
            $('#PlaceHolderHere').on('click', '[id="btnEditFriendSubmit"]', function (event) {
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();
                $.post(actionUrl, sendData).done(function (data) {
                    if (Boolean(data.successful)) {
                        PlaceHolderElement.find('.modal').modal('hide');
                        setTimeout(function () {// wait for 1 secs
                            location.reload(); // then reload the page.
                        }, 500);
                    } else {
                        // Show errors
                        //    alert("Error");
                    }
                })
                    .fail(function () {
                        alert("There was an error processing your request. Please try again.");
                    });
            });

        });

</script>
}

<style>

    body {
        color: #2E2E2E;
    }

    h4 {
        margin-top: 0px;
        margin-bottom: 0px;
        font-size: 32px;
    }

    #feature-image {
        width: 25vw;
        height: auto;
        padding: 50px;
    }

    .Massive-Text {
        font-size: 72px;
        margin-top: 0px;
        margin-bottom: 0px;
        color: #2E2E2E
    }

    div.gray-box {
        background-color: #F1F2F3;
        padding: 20px;
        border-radius: 12px;
    }

    .gold-text {
        color: #E0B840;
    }
</style>