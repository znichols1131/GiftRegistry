@model GiftRegistry.Models.WishListDetail

@{
    ViewBag.Title = "Details";
}

<div id="PlaceHolderHere"></div>

<div class="row mt-4">

    <div class="col-md-6 align-self-end py-4">

        <div class="mt-4 gray-box row justify-content-between">

            <div class="col-auto me-auto align-self-center">
                <h4>@Model.Name</h4>

                <div class="mt-3">
                    @if (Model.Description != null && Model.Description.Length > 0)
                    {
                        <p>Description: @Model.Description</p>
                    }

                    <p>Date: @Html.DisplayFor(model => model.DueDate)</p>

                    @if (ViewBag.UserGUID != Model.OwnerGUID)
                    {
                        <p>List Owner: @Model.OwnerName</p>
                    }

                </div>

                <div class="mt-3">
                    @if (ViewBag.UserGUID == Model.OwnerGUID)
                    {
                        <button type="button" class="btn btn-gold" data-toggle="ajax-modal" data-target="#createGift"
                                data-url="@Url.Action("Create", "Gift", new { id = Model.WishListID })">
                            Add A Gift
                        </button>

                        <button type="button" class="btn btn-gray-dark mx-2" data-toggle="ajax-modal" data-target="#editWishList"
                                data-url="@Url.Action("Edit", "WishList", new { id = Model.WishListID })">
                            Edit Info
                        </button>
                    }
                    else
                    {
                        @Html.ActionLink("View Profile", "FriendDetails", "Person", new { personID = Model.OwnerID }, new { @class = "btn btn-gray-dark" })
                    }
                </div>
            </div>

            <div class="col-auto  d-flex flex-column justify-content-center">
                <div class="d-flex align-items-center p-0">
                    @if (Model.OwnerImage != null)
                    {
                        var base64 = Convert.ToBase64String(Model.OwnerImage);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                        <a id="list-owner-img-wrapper" href="@Url.Action("FriendDetails", "Person", new { personID = Model.OwnerID })">
                            <img src="@imgSrc" id="list-owner-img" class="mx-auto my-auto d-block align-middle" alt="List Owner Profile Picture">
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="text-center">
            <img id="feature-image" src="~/Images/Gift2.svg" alt="Transactions image" />
        </div>
    </div>

</div>


<div>
    <br />
    <h2 class="mt-4">Gifts</h2>
    <hr />

    @if (Model.Gifts is null || Model.Gifts.Count() == 0)
    {
        <p class="my-4">We couldn't find any gifts for this wish list. Try checking back later!</p>
    }
    else
    {
        <div id="friendList" class="row row-gallery row-cols-1 row-cols-md-auto g-4 mb-2">

            @foreach (var item in Model.Gifts)
            {
                var qtyPurchased = Model.QtyPurchasedForGiftID(item.GiftID);
                @Html.Partial("_GiftItemPartial", item, new ViewDataDictionary { { "isGiftOwner", ViewBag.UserGUID == Model.OwnerGUID }, { "qtyPurchased", qtyPurchased } })
            }

        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        // Button pressed to open a modal (any modal)
        $(function () {
            var PlaceHolderElement = $('#PlaceHolderHere');
            $('button[data-toggle="ajax-modal"]').click(function (event) {
                var url = $(this).data('url');
                $.get(url).done(function (data) {
                    PlaceHolderElement.html(data);
                    PlaceHolderElement.find('.modal').modal('show');
                });
            });

            // Edit button pressed on wish list modal
            $('#PlaceHolderHere').on('click', '[id="btnEditWishListSubmit"]', function (event) {
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();
                $.post(actionUrl, sendData).done(function (data) {
                    if (Boolean(data.successful)) {
                        PlaceHolderElement.find('.modal').modal('hide');
                        setTimeout(function () {// wait for 1 secs
                            location.reload(); // then reload the page.
                        }, 500);
                    } else {
                        // Show errors
                        //    alert("Error");
                    }
                })
                    .fail(function () {
                        alert("There was an error processing your request. Please try again.");
                    });
            });

            // Create button pressed on create gift modal
            $('#PlaceHolderHere').on('click', '[id="btnCreateGiftSubmit"]', function (event) {
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();
                $.post(actionUrl, sendData).done(function (data) {
                    if (Boolean(data.successful)) {
                        PlaceHolderElement.find('.modal').modal('hide');
                        setTimeout(function () {// wait for 1 secs
                            location.reload(); // then reload the page.
                        }, 500);
                    } else {
                        // Show errors
                        //    alert("Error");
                    }
                })
                    .fail(function () {
                        alert("There was an error processing your request. Please try again.");
                    });
            });

            // Save button pressed on edit modal
            $('#PlaceHolderHere').on('click', '[id="btnEditGiftSubmit"]', function (event) {
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();
                $.post(actionUrl, sendData).done(function (data) {
                    if (Boolean(data.successful)) {
                        PlaceHolderElement.find('.modal').modal('hide');
                        setTimeout(function () {// wait for 1 secs
                            location.reload(); // then reload the page.
                        }, 500);
                    } else {
                        // Show errors
                        //    alert("Error");
                    }
                })
                    .fail(function () {
                        alert("There was an error processing your request. Please try again.");
                    });
            });

            // Delete button pressed on delete modal
            $('#PlaceHolderHere').on('click', '[id="btnDeleteGiftSubmit"]', function (event) {

                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();
                $.ajax({
                    url: actionUrl,
                    type: "POST",
                    data: sendData,
                    dataType: 'json',
                    success: function (data) {
                        if (Boolean(data.successful)) {
                            PlaceHolderElement.find('.modal').modal('hide');
                            setTimeout(function () {// wait for 1 secs
                                location.reload(); // then reload the page.
                            }, 500);
                        } else {
                            // Show errors
                            //    alert("Error");
                        }
                    },
                    error: function () {
                        alert("There was an error processing your request. Please try again.");
                    }
                });

            });

            // Edit button pressed on details gift modal, need to go to edit modal
            $('#PlaceHolderHere').on('click', '[id="btnDetailsGoToEditGift"]', function (event) {

                var url = $(this).data('url');
                PlaceHolderElement.find('.modal').modal('hide');

                $.get(url).done(function (data) {
                    PlaceHolderElement.html(data);
                    PlaceHolderElement.find('.modal').modal('show');
                });

            });

            // Purchase button pressed on details gift modal, need to go to create modal for transaction
            $('#PlaceHolderHere').on('click', '[id="btnDetailsGoToPurchaseGift"]', function (event) {

                var url = $(this).data('url');
                PlaceHolderElement.find('.modal').modal('hide');

                $.get(url).done(function (data) {
                    PlaceHolderElement.html(data);
                    PlaceHolderElement.find('.modal').modal('show');
                });

            });

            // Create button pressed on create transaction modal
            $('#PlaceHolderHere').on('click', '[id="btnCreateTransactionSubmit"]', function (event) {
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();
                $.post(actionUrl, sendData).done(function (data) {
                    if (Boolean(data.successful)) {
                        PlaceHolderElement.find('.modal').modal('hide');
                        setTimeout(function () {// wait for 1 secs
                            location.reload(); // then reload the page.
                        }, 500);
                    } else {
                        // Show errors
                        //    alert("Error");
                    }
                })
                    .fail(function () {
                        alert("There was an error processing your request. Please try again.");
                    });
            });

        });

    </script>
}

<style>

    body {
        color: #2E2E2E;
    }

    h4 {
        margin-top: 0px;
        margin-bottom: 0px;
        font-size: 32px;
    }

    #feature-image {
        width: 25vw;
        height: auto;
        padding: 50px;
    }

    #list-owner-img {
        height: 100%;
        max-height: 200px;
        aspect-ratio: 1.0;
        object-fit: cover;
        border-radius: 50%;
        padding: 0px;
        margin: 0px;
        vertical-align: middle;
        border: 1px solid rgba(143, 143, 143, .5);
        background-color: #FFFFFF;
    }

    #list-owner-img-wrapper {
        height: 80%;
    }

    .btn.btn-list-item {
        margin-left: 2px;
        margin-right: 2px;
        height: auto;
    }

    .Massive-Text {
        font-size: 72px;
        margin-top: 0px;
        margin-bottom: 0px;
        color: #2E2E2E
    }

    div.gray-box {
        background-color: #F1F2F3;
        padding: 20px;
        border-radius: 12px;
    }

    .gold-text {
        color: #E0B840;
    }
</style>