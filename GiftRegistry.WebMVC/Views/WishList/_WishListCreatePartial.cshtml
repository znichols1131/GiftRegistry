@model GiftRegistry.Models.WishListCreate

<div class="modal fade" id="createWishList">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title" id="createWishListLabel">Create Wish List</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            @using (Html.BeginForm("Create", "WishList", FormMethod.Post, new { @id = "basic-form" }))
            {
                <div class="modal-body">
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <label for="Name">Name <span>(required, at least 2 characters)</span></label>
                            <div class="col-md-12">
                                <input id="Name" name="Name" minlength="2" maxlength="50" required type="text" class="form-control">
                                @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control required", aria_required = "true" } })*@
                                @*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <label for="Description">Description</label>
                            <div class="col-md-12">
                                <input id="Description" name="Description" maxlength="100" type="text" class="form-control">
                                @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
                                @*@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                <input id="DueDate" name="DueDate" type="date" class="form-control">
                                @*@Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control required", aria_required = "true" } })*@
                                @*@Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-gray-light" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-gray-dark" data-save="modal" id="btnCreateSubmit">Save</button>
                </div>
            }
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        $("#basic-form").validate({
            errorClass: "error fail-alert",
            rules: {
                Name: {
                    required: true,
                    minlength: 2,
                    maxlength: 50
                },
                Description: {
                    maxlength: 100
                }
            },
            messages: {
                Name: {
                    required: "Please enter a name for this wish list.",
                    minlength: "Name should be at least 2 characters long.",
                    maxlength: "Name should not be more than 50 characters long."
                },
                Description: {
                    maxlength: "Name should not be more than 100 characters long."
                }
            }
        });
    });

</script>