@model GiftRegistry.Models.PersonEdit

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "Person", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PersonEdit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PersonID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { Value = Model.Birthdate.Value.ToString("yyyy-MM-dd"), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-offset-2 col-md-10">
                @if (Model.ProfilePicture != null)
                {
                    var base64 = Convert.ToBase64String(Model.ProfilePicture);
                    var profilePictureSrc = String.Format("data:image/gif;base64,{0}", base64);
                    <img src="@profilePictureSrc" alt="Profile Picture" height=200 width=200 />
                }
            </div>
            <div class="col-md-offset-2 col-md-10 mt-3 mb-4">
                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
            </div>

        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 mt-3">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    @Html.ActionLink("Back to Home Page", "Index", "Home")
                </div>
            </div>
        </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
